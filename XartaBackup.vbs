' ----------------------------------------------------------------
' Back-up my hMailServer Windows 10 installation ...
' 	Aiming for:
'		hMailServer settings
'		Email data folder
'		MySQL dump
' -----------------------------------------------------------------

'------------------------------------------------------------------
' Haven't used VBScript in a decade or so I think ... seemed handy 
' for hMailServer ... just Google searched for "include", and "json"
' etc. just to use slightly more modern approaches / handy things
' -----------------------------------------------------------------


' *****************************************************************
' INCLUDE FILES
' *************
' safe for when elevated (elevated changes working directory I think)
Dim iFiles, XartaScriptDir
XartaScriptDir = Replace(WScript.ScriptFullName,WScript.ScriptName,"")

Set iFiles = CreateObject("Scripting.Dictionary")
'iFiles.Add 	"XartaElevate.vbs", 		"Elevate (UAC) script"

iFiles.Add 	"VbsJson.vbs", 				"Someone's great class for " & _
										"JSON encoding/decoding"

iFiles.Add 	"XartaJson.vbs", 			"Depends on VbsJson.vbs: " & _
										"decode Xarta.json (settings)"

iFiles.Add 	"XartaADS_constants.vbs", 	" ... just constants"

iFiles.Add 	"XartaComputer.vbs",		"initialise & encapsulate " & _
										"in class host related " & _
										"objects/values for convenience " & _
										"and future extension"

iFiles.Add 	"XartaErrorCodes.vbs",		"Functions to return error " & _
										"descriptions"

iFiles.Add 	"XartaUtilities.vbs",		"Boring stuff grouped together"

For Each iFile in iFiles
	With CreateObject("Scripting.FileSystemObject")
		executeGlobal .openTextFile(XartaScriptDir & iFile).readAll()
	End With	
Next
' *****************************************************************


Const XARTADEBUG = false ' MAKE SURE false FOR TASK SCHEDULED EVENTS (ECHO USED)

Dim o, jsonTasks
Set o = GetXartaJsonObject(XartaScriptDir)
Set jsonTasks = o("tasks")

For Each jsonObj in jsonTasks
	If (WScript.Arguments.Count = 0) Then
		SetScheduler 	o, _
						o("tasks")(jsonObj)("TN"), _
						jsonObj, _
						o("tasks")(jsonObj)("SC"), _
						o("tasks")(jsonObj)("D"), _
						o("tasks")(jsonObj)("ST")

		WScript.Sleep 100 ' allow SchTasks time to add task
	ElseIf (WScript.Arguments(0) = jsonObj) Then
		With CreateObject("Scripting.FileSystemObject")
			executeGlobal jsonObj + " GetXartaJsonObject(XartaScriptDir), XartaScriptDir"
		End With
	End If
Next




Sub BkUpHMSsettings(o, XartaScriptDir)
	' ------------------------------------------------------------------------------------
	' Creates a hMailServer backup using the settings 
	' specified in hMailAdmin.
	' NOTES:
	' I had problems with this, and permissions and scheduling
	' No issue using a normal user account for scheduling if set
	' to "only when user is logged on", but despite all the ideas
	' and research I put into it, including using indirect bat files
	' in the %USERPROFILE% and checking for absolute paths, and 
	' other "start in" related corrections (I think it worked if I put
	' in the optional "start in" manually), I could only get this hMailServer
	' backup script to work (when scheduled), and when set to
	' "whether logged on or not", when the selected user is an
	' Administrator (note hMailServer service set to an ordinary
	' user account - an account I originally hoped to use for the scripted
	' backups - setting it with batch-rights in local policy etc.)
	Dim oApp
	Set oApp = CreateObject("hMailServer.Application")

	' Authenticate the client.
	Call oApp.Authenticate (o("hMailServer")("User"), o("hMailServer")("Password"))
	Call oApp.BackupManager.StartBackup()
	' ------------------------------------------------------------------------------------
End Sub


Sub WriteSqlBackUpScripts(o, XartaScriptDir)
	' not using here but keeping for reference:
	' mysqldump return codes:
	'	1	EX_USAGE
	'	2	EX_MYSQLERR
	'	3	EX_CONSCHECK
	'	4	EX_EOM
	'	5	EX_EOF
	'	6	EX_ILLEGAL_TABLE

	
	Const ForWriting = 2
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	Set objFile = objFSO.OpenTextFile(XartaScriptDir & "XartaMySqlDump.bat", ForWriting)
	
	objFile.Writeline(	"REM dynamically generated by XartaBackupvbs")
	objFile.Writeline(	chr(34) & o("paths")("mysqldumpexe") & chr(34) & _
						" --defaults-extra-file=" & o("paths")("mysqldumpdefaultsextrafile") & _
						" --verbose -u" & o("mySQL")("backup")("User") & _
						" -hlocalhost hmailserver 2> " & o("paths")("mysqldumpoutput") & "\dump.log > " & _
						"%1")
	
	Set objFile = objFSO.OpenTextFile(o("paths")("mysqldumpdefaultsextrafile"), ForWriting)

	objFile.Writeline("[mysqldump]")
	objFile.Writeline("user=" & o("mySQL")("backup")("User"))
	objFile.Writeline("password=" & chr(34) & o("mySQL")("backup")("Password") & chr(34))

	objFile.Close

End Sub

'BkUpMySql GetXartaJsonObject(XartaScriptDir), XartaScriptDir

Sub BkUpMySql(o, XartaScriptDir)

	WriteSqlBackUpScripts o, XartaScriptDir
	
	Dim DumpDate, DumpFilename, RetVal
	DumpDate = FileNameFormattedDateNow()
	DumpFilename = o("paths")("mysqldumpoutput") & "\" & DumpDate & "hmdump.sql"

	Set objShell = CreateObject("WScript.Shell")
	objShell.Run XartaScriptDir & "XartaMySqlDump.bat " & DumpFilename, 4, True

	'objShell.Run("powershell -ExecutionPolicy Bypass -noexit -file G:\XARTA-SCRIPTS\Xarta7zipTEST.ps1")

	RetVal = ZipToSambaShare(o, XartaScriptDir, _
							DumpFileName, _
							DumpDate & "hmdump.sql.7z", _
							o("7zip")("Password"))
	Dim filesys
	Set filesys = CreateObject("Scripting.FileSystemObject")
	If filesys.FileExists(DumpFileName) Then
		'filesys.DeleteFile DumpFileName
	End If

End Sub

'BkUpHMSdata GetXartaJsonObject(XartaScriptDir), XartaScriptDir

Sub BkUpHMSdata(o, XartaScriptDir)

	Dim RetVal, resultnum, resultdescription, filenameDest

	resultnum = hMailServer("stop")
	
	filenameDest = FileNameFormattedDateNow() & "hmdata.7z"

	RetVal = ZipToSambaShare(o, XartaScriptDir, _
								o("paths")("hmdata") & "\*", _
								filenameDest, _
								o("7zip")("Password"))

	resultnum = hMailServer("start")
	resultdescription = StartStopServiceError(resultnum)

End Sub





Sub SetScheduler(o, taskName, taskArg, SC, D, ST)
	' http://www.robvanderwoude.com/schtasks.php
	Dim taskActionPath
	taskActionPath = WScript.ScriptFullName & " " & Chr(34) & taskArg & Chr(34)

	Set wShell = CreateObject("Wscript.Shell")

	' only delete and re-add the scheduled task if this script is run without Arguments
	' (When scheduled there will be an argument as set here)

	' Looks like the delete instruction only works if the user trying to delete is the 
	' same user who authored the task before (doesn't matter who is set for run-as)
	wShell.Run "SchTasks /Delete /TN """ & taskName & """ /F", 0
	wShell.Run "SchTasks /Create /RU """ & o("windowsAccounts")("scheduler")("User") & """ /RP """  & _
		o("windowsAccounts")("scheduler")("Password") & """ /SC " & SC & " /D " & D & " /TN """ & _
		taskName & """ /TR """ & taskActionPath & """ /ST " & ST & """", 0
End Sub